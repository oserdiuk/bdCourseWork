@model WorkFlow.Models.DataBaseModels.Companies

@{
    ViewBag.Title = "Edit Information About Yourself";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit your information</h2>


<div class="container-fluid">
    <div class="row-fluid">
        <div class="col-md-12">

            <span class="col-md-4">
                <br />
                <hr />
                <br />

                <img src='@Url.Action("ShowImage", "Database", new { id = Model.Id })' style="max-width:100%" />
                <br />
                <hr />
                <br />

                @if (Model.Logo != "anon.jpg")
                {
                    using (Ajax.BeginForm("DeleteLogo", "Manage", new { id = Model.Id }, new AjaxOptions { HttpMethod = "POST" }))
                    {
                        <input type="submit" class="btn btn-default" value="Delete photo" />
                    }
                }

                @using (Html.BeginForm("UploadLogo", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.TextBox("file", "", new { type = "file" })

                    <input type="submit" class="btn btn-default" value="Upload" />
                }


            </span>


            @using (Html.BeginForm("Edit", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="col-md-8">
                    <hr />

                    <div class="form-group">
                        <span class="col-md-5">@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })</span>
                        <span class="col-md-7">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @value = Model.Name } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </span>
                    </div>

                    <div class="form-group">
                        
                        <span class="col-md-5">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        </span>
    
                        <span class="col-md-7">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @value = Model.Address } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </span>
                    </div>

                    <div class="form-group">
                        <span class="col-md-5">
                            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })
                        </span>
                        <span class="col-md-7">
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @Value = Model.Website } })
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                        </span>
                    </div>

                    <div class="form-group">
                        <span class="col-md-5">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                        </span>
                        <span class="col-md-7">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @Value = Model.City } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </span>
                    </div>

                    <div class="form-group">
                        <span class="col-md-5">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        </span>
                        <span class="col-md-7">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @Value = Model.Email } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </span>
                    </div>

                    <div class="form-group">
                        <span class="col-md-5">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                        </span>
                        <span class="col-md-7">
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @Value = Model.Phone })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </span>
                    </div>
                    @{List<SelectListItem> items = new List<SelectListItem>();
                    items.Add(new SelectListItem { Text = "государственная", Value = "государственная" });
                    items.Add(new SelectListItem { Text = "частная", Value = "частная" });}


                    <div class="form-group">
                        <span class="col-md-5">
                            @Html.LabelFor(m => m.PropertyForm, new { @class = "control-label" })
                        </span>
                        <span class="col-md-7">
                            @Html.DropDownListFor(m => m.PropertyForm, items, new { @class = "form-control", @Value = Model.PropertyForm })
                        </span>
                    </div>


                    <div class="form-group">
                        <span class="col-md-5">
                            @Html.LabelFor(model => model.CreatingDate, htmlAttributes: new { @class = "control-label" })
                        </span>
                        <span class="col-md-7">
                            @Html.EditorFor(model => model.CreatingDate, new { htmlAttributes = new { @class = "form-control", @Value = (DateTime) Model.CreatingDate } })
                            @Html.ValidationMessageFor(model => model.CreatingDate, "", new { @class = "text-danger" })
                        </span>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12 col-md-offset-3">
                            <input type="submit" value="Save" class="btn btn-default" style="width:10%" />
                        </div>
                    </div>

                </div>
            }

        </div>
    </div>
    <div class="span2">

    </div>
</div>
