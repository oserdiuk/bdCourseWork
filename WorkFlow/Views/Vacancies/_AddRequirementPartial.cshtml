@model WorkFlow.Models.DataBaseModels.Requirements

@*<a data-toggle="modal" href="#myModal" class="btn btn-primary btn-large">Запустить пример всплывающего окна</a>

<div id="myModal" class="modal fade-">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">Add requirement</h4>
                </div>
                  
                <div class="modal-body">
                    @Html.EditorFor(m => m.MaxValue)
                </div>
                <div class="modal-body">
                    @Html.EditorFor(m => m.MinValue)
                </div>
                <div class="modal-body">
                    @{List<SelectListItem> items = new List<SelectListItem>();
                    foreach (var v in ViewBag.Skills)
                    {
                        items.Add(new SelectListItem { Text = v.Name, Value = v.Id.ToString() });
                    } 
                    }   

                    @Html.DropDownListFor(m => m.SkillId, items, new { @class = "form-control" })
                </div>
                <button type="submit" class="btn btn-default" data-dismiss="modal">submit</button>

                

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick=@Url.Action("CreateRequirement", "Manage", new { maxValue = "#max"})>Save changes</button>
                    </div>
                </div>
        </div>
    </div>*@
<link href="@Url.Content("~/Content/slick.grid.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.event.drag.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/SlickGrid/slick.core.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/SlickGrid/slick.grid.js")" type="text/javascript"></script>

@*<link rel="stylesheet" href="../slick.grid.css" type="text/css" />
<link rel="stylesheet" href="../css/smoothness/jquery-ui-1.8.16.custom.css" type="text/css" />
<link rel="stylesheet" href="examples.css" type="text/css" />



<table width="100%">
    <tr>
        <td valign="top" width="50%">
            <div id="myGrid" style="width:600px;height:500px;"></div>
        </td>
        <td valign="top">
            <h2>Demonstrates:</h2>
            <ul>
                <li>basic grid with minimal configuration</li>
            </ul>
            <h2>View Source:</h2>
            <ul>
                <li><a href="https://github.com/mleibman/SlickGrid/blob/gh-pages/examples/example1-simple.html" target="_sourcewindow"> View the source for this example on Github</a></li>
            </ul>
        </td>
    </tr>
</table>


@Scripts.Render("~/bundles/slick")


@{
    List<WorkFlow.Models.DataBaseModels.Skills> skills = new List<WorkFlow.Models.DataBaseModels.Skills>();
    List<WorkFlow.Models.DataBaseModels.Requirements> requirements = new List<WorkFlow.Models.DataBaseModels.Requirements>();
    WorkFlow.Models.DataBaseModels.Requirements r = new WorkFlow.Models.DataBaseModels.Requirements();
    string name = "name";
    string unit = "unit";
    string min = "min";
    string max = "max";
}

<script>
    function requiredFieldValidator(value) {
        if (value == null || value == undefined || !value.length) {
            return { valid: false, msg: "This is a required field" };
        } else {
            return { valid: true, msg: null };
        }
    }

    var grid;
    var data = [];
    var columns = [
      { id: "name", name: "Name", field: "name", width: 120, editor: Slick.Editors.Text, validator: requiredFieldValidator},
      { id: "minValue", name: "Min value", field: "minValue", width: 120, editor: Slick.Editors.Text },
      { id: "maxValue", name: "Max Value", field: "maxValue", width: 120, editor: Slick.Editors.Text },
      { id: "unit", name: "Unit of measure", field: "unit", width: 120, editor: Slick.Editors.Text },
    ];
    var options = {
        editable: true,
        enableAddRow: true,
        enableCellNavigation: true,
        enableColumnReorder: false
    };


    function myfunction() {
        for (var i = 0; i < @Model.Requirements.Count() && @Model.Requirements.Count() != 0; i++) {

            var d = (data[i] = {});
            @{

               if (Model.Requirements.Count() != 0) {
                  int i = Convert.ToInt32(Request["i"]);
                    r = requirements.ElementAt(i);
                    name = (skills.LastOrDefault(s => s.Id == r.SkillId)).Name;
                    unit = (skills.LastOrDefault(s => s.Id == r.SkillId)).UnitMeasure;
                    min = r.MinValue;
                    max = r.MaxValue;
               }
            }
            d["minValue"] = @min;
            d["maxValue"] = @max;
            d["unit"] = @unit;
            d["name"] = @name;

        }
        grid = new Slick.Grid("#myGrid", data, columns, options);

        grid.setSelectionModel(new Slick.CellSelectionModel());
        grid.onAddNewRow.subscribe(function (e, args) {
            var item = args.item;
            grid.invalidateRow(data.length);
            data.push(item);
            $.ajax({
                type: "POST",
                url: "Controllers/ManageController/CreateRequirement",
                contentType: "application/json; charset=utf-8",
                failure: function(response) {
                    alert(response.d);
                }
            });
            grid.updateRowCount();
            grid.render();
        });
        // alert("success");
    }


    $(function () {
        myfunction();
    })
</script>