@model WorkFlow.Models.DataBaseModels.Vacancies

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>You can download a template, fill out it and upload new vacancies through it. </h2>
<br />

@using (Html.BeginForm("DownloadTemplate", "Vacancies", FormMethod.Post,
    new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <input type="submit" value="Download a template" /> 
}

<br />
@using (Html.BeginForm("UploadFileWithVacancies", "Vacancies", FormMethod.Post,
    new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <label>Upload file from computer:</label>
    @Html.TextBox("file", "", new { type = "file" })

    <input type="submit" value="Upload" />
}
<hr />
<h2>Or you can fill out form here and click "Create". </h2>

@using (Ajax.BeginForm("CreateVacancy", "Manage", new AjaxOptions{HttpMethod = "POST"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Vacancies</h4>
        <hr />


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpenDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpenDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OpenDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>


        </div>

        <div class="form-group col-md-12">

                @Html.Partial("_AddRequirementPartial", new WorkFlow.Models.DataBaseModels.DBContext())
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}