@model WorkFlow.Models.SearchVacancyCriteria

@using (Ajax.BeginForm("SearchForVacancy", "Search", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "divResponse" }))
{
    <div class="col-md-12 col-md-offset-4">

        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @value = Model.Name } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-8">

                @{
                     List<WorkFlow.Models.DataBaseModels.Companies> companies = WorkFlow.Controllers.DatabaseController.DoSQL<WorkFlow.Models.DataBaseModels.Companies>("Select Distinct * From Companies;");
                     List<SelectListItem> itemsCompanies = new List<SelectListItem>();
                     itemsCompanies.Add(new SelectListItem { Text = "Choose a company...", Value = "" });
                     foreach (var v in companies)
                     {
                         itemsCompanies.Add(new SelectListItem { Text = v.Name, Value = v.Name });
                     } 
                }

                @Html.DropDownListFor(m => m.Company, itemsCompanies, new { @class = "form-control", style = "width: 100%;" })

                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-8">

                @{List<SelectListItem> items = new List<SelectListItem>();
                foreach (var v in ViewBag.Skills)
                {
                    items.Add(new SelectListItem { Text = v.Name, Value = v.Name });
                } }

                @Html.ListBoxFor(m => m.Skills, items, new { @class = "form-control", Size = 9, style = "width: 100%;" })
            </div>
        </div>


        <div class="form-group col-md-12">
            <div class=" col-md-8 col-md-offset-1">
                <input type="submit" id="submitButton" class="btn btn-primary " value="Search vacancy" />
            </div>
        </div>
    </div>
}

