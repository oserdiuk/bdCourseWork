@model WorkFlow.Models.DataBaseModels.Requirements

@using Workflow.Helpers;

@using (Html.BeginCollectionItem("requirements"))
{
    <div class="editorRow">
        <div class="col-md-5">
            @{List<SelectListItem> items = new List<SelectListItem>();
              List<WorkFlow.Models.DataBaseModels.Skills> list = WorkFlow.Controllers.DatabaseController.DoSQL<WorkFlow.Models.DataBaseModels.Skills>("Select * From Skills");
              foreach (var v in list)
            {
                items.Add(new SelectListItem { Text = v.Name + v.UnitMeasure, Value = v.Name });
            } }
            @if (Model.Skills != null)
            {
                @Html.DropDownListFor(m => m.Skills.Name, items, new { @Value = Model.Skills.Name })
            }
            else
            {
                @Html.DropDownListFor(m => m.Skills.Name, items)
            }
        </div>
        <div class ="col-md-2">
            @Html.EditorFor(m => m.MinValue)@*, new { htmlAttributes = new { @class = "form-control", @value = Model.MinValue} })*@
        </div>
        <div class="col-md-2 col-md-offset-1">
            @Html.EditorFor(m => m.MaxValue) @*new { htmlAttributes = new { @class = "form-control", @value = Model.MaxValue }*@ 
        </div>
        <div>
            <button class="deleteRow">delete</button>
            </div>
        <br />
        <br />
        </div>
}



<script>
    $(function () {
        $("button.deleteRow").on("click", function () {
            $(this).parents("div.editorRow:first").remove();
            return false;
        });
    });
    
</script>